name: Build and Push Node.js Image to AWS ECR

on:
  push:
    branches: 
      - master
    tags:
      - "*"  # Triggers workflow when a tag is pushed

env:
  ECR_REPOSITORY: signalify-dashboard  # Set the ecr repository name

jobs:
  build:
    name: Build and push to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Determine the correct tag for the Docker image
    - name: Extract tag or branch name
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "TAG_NAME=test" >> $GITHUB_ENV
        fi

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Log in to AWS ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.TAG_NAME }} .
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}

    - name: Tag Docker image with semantic version
      run: |
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.TAG_NAME }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.TAG_NAME }}
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}

    - name: Push Docker image to ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.TAG_NAME }}
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
